{"remainingRequest":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js??ref--14-1!C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js??ref--14-2!C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\slider\\Slider.js","dependencies":[{"path":"C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\slider\\Slider.js","mtime":1575294964875},{"path":"C:\\backup\\RNDSDemo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575382926455},{"path":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575382927776},{"path":"C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js","mtime":1574752627091}],"contextDependencies":[],"result":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.Slider=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"react-native\");var _config=require(\"../config\");var _jsxFileName=\"C:\\\\backup\\\\RNDSDemo\\\\node_modules\\\\react-native-elements\\\\src\\\\slider\\\\Slider.js\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var TRACK_SIZE=4;var THUMB_SIZE=20;var DEFAULT_ANIMATION_CONFIGS={spring:{friction:7,tension:100},timing:{duration:150,easing:_reactNative.Easing.inOut(_reactNative.Easing.ease),delay:0}};var getBoundedValue=function getBoundedValue(_ref){var value=_ref.value,maximumValue=_ref.maximumValue,minimumValue=_ref.minimumValue;return value>maximumValue?maximumValue:value<minimumValue?minimumValue:value;};var Rect=function(){function Rect(x,y,width,height){(0,_classCallCheck2.default)(this,Rect);this.x=x;this.y=y;this.width=width;this.height=height;}(0,_createClass2.default)(Rect,[{key:\"containsPoint\",value:function containsPoint(x,y){return x>=this.x&&y>=this.y&&x<=this.x+this.width&&y<=this.y+this.height;}}]);return Rect;}();var Slider=function(_Component){(0,_inherits2.default)(Slider,_Component);function Slider(props){var _this;(0,_classCallCheck2.default)(this,Slider);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Slider).call(this,props));_this.measureContainer=function(x){_this.handleMeasure('containerSize',x);};_this.measureTrack=function(x){_this.handleMeasure('trackSize',x);};_this.measureThumb=function(x){_this.handleMeasure('thumbSize',x);};_this.state={containerSize:{width:0,height:0},trackSize:{width:0,height:0},thumbSize:{width:0,height:0},allMeasured:false,value:new _reactNative.Animated.Value(getBoundedValue(props))};_this.panResponder=_reactNative.PanResponder.create({onStartShouldSetPanResponder:_this.handleStartShouldSetPanResponder.bind((0,_assertThisInitialized2.default)(_this)),onMoveShouldSetPanResponder:_this.handleMoveShouldSetPanResponder.bind((0,_assertThisInitialized2.default)(_this)),onPanResponderGrant:_this.handlePanResponderGrant.bind((0,_assertThisInitialized2.default)(_this)),onPanResponderMove:_this.handlePanResponderMove.bind((0,_assertThisInitialized2.default)(_this)),onPanResponderRelease:_this.handlePanResponderEnd.bind((0,_assertThisInitialized2.default)(_this)),onPanResponderTerminationRequest:_this.handlePanResponderRequestEnd.bind((0,_assertThisInitialized2.default)(_this)),onPanResponderTerminate:_this.handlePanResponderEnd.bind((0,_assertThisInitialized2.default)(_this))});return _this;}(0,_createClass2.default)(Slider,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var newValue=getBoundedValue(this.props);if(prevProps.value!==newValue){if(this.props.animateTransitions){this.setCurrentValueAnimated(newValue);}else{this.setCurrentValue(newValue);}}}},{key:\"setCurrentValue\",value:function setCurrentValue(value){this.state.value.setValue(value);}},{key:\"setCurrentValueAnimated\",value:function setCurrentValueAnimated(value){var animationType=this.props.animationType;var animationConfig=(0,_extends2.default)({},DEFAULT_ANIMATION_CONFIGS[animationType],this.props.animationConfig,{toValue:value});_reactNative.Animated[animationType](this.state.value,animationConfig).start();}},{key:\"handleMoveShouldSetPanResponder\",value:function handleMoveShouldSetPanResponder(){return false;}},{key:\"handlePanResponderGrant\",value:function handlePanResponderGrant(){this._previousLeft=this.getThumbLeft(this.getCurrentValue());this.fireChangeEvent('onSlidingStart');}},{key:\"handlePanResponderMove\",value:function handlePanResponderMove(_,gestureState){if(this.props.disabled){return;}this.setCurrentValue(this.getValue(gestureState));this.fireChangeEvent('onValueChange');}},{key:\"handlePanResponderRequestEnd\",value:function handlePanResponderRequestEnd(){return false;}},{key:\"handlePanResponderEnd\",value:function handlePanResponderEnd(_,gestureState){if(this.props.disabled){return;}this.setCurrentValue(this.getValue(gestureState));this.fireChangeEvent('onSlidingComplete');}},{key:\"thumbHitTest\",value:function thumbHitTest(_ref2){var nativeEvent=_ref2.nativeEvent;var thumbTouchRect=this.getThumbTouchRect();return thumbTouchRect.containsPoint(nativeEvent.locationX,nativeEvent.locationY);}},{key:\"handleStartShouldSetPanResponder\",value:function handleStartShouldSetPanResponder(e){return this.thumbHitTest(e);}},{key:\"fireChangeEvent\",value:function fireChangeEvent(event){if(this.props[event]){this.props[event](this.getCurrentValue());}}},{key:\"getTouchOverflowSize\",value:function getTouchOverflowSize(){var _this$state=this.state,thumbSize=_this$state.thumbSize,allMeasured=_this$state.allMeasured,containerSize=_this$state.containerSize;var thumbTouchSize=this.props.thumbTouchSize;var size={};if(allMeasured===true){size.width=Math.max(0,thumbTouchSize.width-thumbSize.width);size.height=Math.max(0,thumbTouchSize.height-containerSize.height);}return size;}},{key:\"getTouchOverflowStyle\",value:function getTouchOverflowStyle(){var _this$getTouchOverflo=this.getTouchOverflowSize(),width=_this$getTouchOverflo.width,height=_this$getTouchOverflo.height;var touchOverflowStyle={};if(width!==undefined&&height!==undefined){var verticalMargin=-height/2;touchOverflowStyle.marginTop=verticalMargin;touchOverflowStyle.marginBottom=verticalMargin;var horizontalMargin=-width/2;touchOverflowStyle.marginLeft=horizontalMargin;touchOverflowStyle.marginRight=horizontalMargin;}if(this.props.debugTouchArea===true){touchOverflowStyle.backgroundColor='orange';touchOverflowStyle.opacity=0.5;}return touchOverflowStyle;}},{key:\"handleMeasure\",value:function handleMeasure(name,x){var _x$nativeEvent$layout=x.nativeEvent.layout,layoutWidth=_x$nativeEvent$layout.width,layoutHeight=_x$nativeEvent$layout.height;var width=this.props.orientation==='vertical'?layoutHeight:layoutWidth;var height=this.props.orientation==='vertical'?layoutWidth:layoutHeight;var size={width:width,height:height};var storeName=\"_\"+name;var currentSize=this[storeName];if(currentSize&&width===currentSize.width&&height===currentSize.height){return;}this[storeName]=size;if(this._containerSize&&this._trackSize&&this._thumbSize){this.setState({containerSize:this._containerSize,trackSize:this._trackSize,thumbSize:this._thumbSize,allMeasured:true});}}},{key:\"getValue\",value:function getValue(gestureState){var length=this.state.containerSize.width-this.state.thumbSize.width;var thumbLeft=this._previousLeft+(this.props.orientation==='vertical'?gestureState.dy:gestureState.dx);var ratio=thumbLeft/length;if(this.props.step){return Math.max(this.props.minimumValue,Math.min(this.props.maximumValue,this.props.minimumValue+Math.round(ratio*(this.props.maximumValue-this.props.minimumValue)/this.props.step)*this.props.step));}return Math.max(this.props.minimumValue,Math.min(this.props.maximumValue,ratio*(this.props.maximumValue-this.props.minimumValue)+this.props.minimumValue));}},{key:\"getCurrentValue\",value:function getCurrentValue(){return this.state.value.__getValue();}},{key:\"getRatio\",value:function getRatio(value){return(value-this.props.minimumValue)/(this.props.maximumValue-this.props.minimumValue);}},{key:\"getThumbLeft\",value:function getThumbLeft(value){var ratio=this.getRatio(value);return ratio*(this.state.containerSize.width-this.state.thumbSize.width);}},{key:\"getThumbTouchRect\",value:function getThumbTouchRect(){var _this$state2=this.state,thumbSize=_this$state2.thumbSize,containerSize=_this$state2.containerSize;var thumbTouchSize=this.props.thumbTouchSize;var touchOverflowSize=this.getTouchOverflowSize();if(this.props.orientation==='vertical'){return new Rect(touchOverflowSize.height/2+(containerSize.height-thumbTouchSize.height)/2,touchOverflowSize.width/2+this.getThumbLeft(this.getCurrentValue())+(thumbSize.width-thumbTouchSize.width)/2,thumbTouchSize.width,thumbTouchSize.height);}return new Rect(touchOverflowSize.width/2+this.getThumbLeft(this.getCurrentValue())+(thumbSize.width-thumbTouchSize.width)/2,touchOverflowSize.height/2+(containerSize.height-thumbTouchSize.height)/2,thumbTouchSize.width,thumbTouchSize.height);}},{key:\"renderDebugThumbTouchRect\",value:function renderDebugThumbTouchRect(thumbLeft){var thumbTouchRect=this.getThumbTouchRect();var positionStyle={left:thumbLeft,top:thumbTouchRect.y,width:thumbTouchRect.width,height:thumbTouchRect.height};return _react.default.createElement(_reactNative.Animated.View,{style:positionStyle,pointerEvents:\"none\",__source:{fileName:_jsxFileName,lineNumber:319}});}},{key:\"getMinimumTrackStyles\",value:function getMinimumTrackStyles(thumbStart){var _this$state3=this.state,thumbSize=_this$state3.thumbSize,trackSize=_this$state3.trackSize;var minimumTrackStyle={position:'absolute'};if(this.props.orientation==='vertical'){minimumTrackStyle.height=_reactNative.Animated.add(thumbStart,thumbSize.height/2);minimumTrackStyle.marginLeft=-trackSize.width;}else{minimumTrackStyle.width=_reactNative.Animated.add(thumbStart,thumbSize.width/2);minimumTrackStyle.marginTop=-trackSize.height;}return minimumTrackStyle;}},{key:\"getThumbPositionStyles\",value:function getThumbPositionStyles(thumbStart){if(this.props.orientation==='vertical'){return[{translateX:-(this.state.trackSize.height+this.state.thumbSize.height)/2},{translateY:thumbStart}];}return[{translateX:thumbStart},{translateY:-(this.state.trackSize.height+this.state.thumbSize.height)/2}];}},{key:\"render\",value:function render(){var _this$props=this.props,minimumValue=_this$props.minimumValue,maximumValue=_this$props.maximumValue,minimumTrackTintColor=_this$props.minimumTrackTintColor,maximumTrackTintColor=_this$props.maximumTrackTintColor,thumbTintColor=_this$props.thumbTintColor,containerStyle=_this$props.containerStyle,style=_this$props.style,trackStyle=_this$props.trackStyle,thumbStyle=_this$props.thumbStyle,debugTouchArea=_this$props.debugTouchArea,orientation=_this$props.orientation,other=(0,_objectWithoutProperties2.default)(_this$props,[\"minimumValue\",\"maximumValue\",\"minimumTrackTintColor\",\"maximumTrackTintColor\",\"thumbTintColor\",\"containerStyle\",\"style\",\"trackStyle\",\"thumbStyle\",\"debugTouchArea\",\"orientation\"]);var _this$state4=this.state,value=_this$state4.value,containerSize=_this$state4.containerSize,thumbSize=_this$state4.thumbSize,allMeasured=_this$state4.allMeasured;var mainStyles=containerStyle||styles;var thumbStart=value.interpolate({inputRange:[minimumValue,maximumValue],outputRange:[0,containerSize.width-thumbSize.width]});var valueVisibleStyle={};if(!allMeasured){valueVisibleStyle.height=0;valueVisibleStyle.width=0;}var minimumTrackStyle=_objectSpread({},this.getMinimumTrackStyles(thumbStart),{backgroundColor:minimumTrackTintColor},valueVisibleStyle);var thumbStyleTransform=thumbStyle&&thumbStyle.transform||[];var touchOverflowStyle=this.getTouchOverflowStyle();return _react.default.createElement(_reactNative.View,(0,_extends2.default)({},other,{style:_reactNative.StyleSheet.flatten([orientation==='vertical'?mainStyles.containerVertical:mainStyles.containerHorizontal,style]),onLayout:this.measureContainer,__source:{fileName:_jsxFileName,lineNumber:397}}),_react.default.createElement(_reactNative.View,{style:_reactNative.StyleSheet.flatten([mainStyles.track,orientation==='vertical'?mainStyles.trackVertical:mainStyles.trackHorizontal,trackStyle,{backgroundColor:maximumTrackTintColor}]),onLayout:this.measureTrack,__source:{fileName:_jsxFileName,lineNumber:407}}),_react.default.createElement(_reactNative.Animated.View,{style:_reactNative.StyleSheet.flatten([mainStyles.track,orientation==='vertical'?mainStyles.trackVertical:mainStyles.trackHorizontal,trackStyle,minimumTrackStyle]),__source:{fileName:_jsxFileName,lineNumber:418}}),_react.default.createElement(_reactNative.Animated.View,{testID:\"sliderThumb\",onLayout:this.measureThumb,style:_reactNative.StyleSheet.flatten([{backgroundColor:thumbTintColor},mainStyles.thumb,orientation==='vertical'?mainStyles.thumbVertical(trackStyle&&trackStyle.width):mainStyles.thumbHorizontal(trackStyle&&trackStyle.height),thumbStyle,_objectSpread({transform:[].concat((0,_toConsumableArray2.default)(this.getThumbPositionStyles(thumbStart)),(0,_toConsumableArray2.default)(thumbStyleTransform))},valueVisibleStyle)]),__source:{fileName:_jsxFileName,lineNumber:428}}),_react.default.createElement(_reactNative.View,(0,_extends2.default)({style:_reactNative.StyleSheet.flatten([styles.touchArea,touchOverflowStyle])},this.panResponder.panHandlers,{__source:{fileName:_jsxFileName,lineNumber:447}}),debugTouchArea===true&&this.renderDebugThumbTouchRect(thumbStart)));}}]);return Slider;}(_react.Component);exports.Slider=Slider;Slider.propTypes={value:_propTypes.default.number,disabled:_propTypes.default.bool,minimumValue:_propTypes.default.number,maximumValue:_propTypes.default.number,step:_propTypes.default.number,minimumTrackTintColor:_propTypes.default.string,maximumTrackTintColor:_propTypes.default.string,thumbTintColor:_propTypes.default.string,thumbTouchSize:_propTypes.default.shape({width:_propTypes.default.number,height:_propTypes.default.number}),onValueChange:_propTypes.default.func,onSlidingStart:_propTypes.default.func,onSlidingComplete:_propTypes.default.func,style:_config.ViewPropTypes.style,trackStyle:_config.ViewPropTypes.style,thumbStyle:_config.ViewPropTypes.style,debugTouchArea:_propTypes.default.bool,animateTransitions:_propTypes.default.bool,animationType:_propTypes.default.oneOf(['spring','timing']),orientation:_propTypes.default.oneOf(['horizontal','vertical']),animationConfig:_propTypes.default.object,containerStyle:_config.ViewPropTypes.style};Slider.defaultProps={value:0,minimumValue:0,maximumValue:1,step:0,minimumTrackTintColor:'#3f3f3f',maximumTrackTintColor:'#b3b3b3',thumbTintColor:'red',thumbTouchSize:{width:40,height:40},debugTouchArea:false,animationType:'timing',orientation:'horizontal'};var styles=_reactNative.StyleSheet.create({containerHorizontal:{height:40,justifyContent:'center'},containerVertical:{width:40,flexDirection:'column',alignItems:'center'},track:{borderRadius:TRACK_SIZE/2},trackHorizontal:{height:TRACK_SIZE},trackVertical:{flex:1,width:TRACK_SIZE},thumb:{position:'absolute',width:THUMB_SIZE,height:THUMB_SIZE,borderRadius:THUMB_SIZE/2},thumbHorizontal:function thumbHorizontal(height){return{top:22+(height?(height-4)/2:0)};},thumbVertical:function thumbVertical(width){return{left:22+(width?(width-4)/2:0)};},touchArea:{position:'absolute',backgroundColor:'transparent',top:0,left:0,right:0,bottom:0},debugThumbTouchArea:{position:'absolute',backgroundColor:'green',opacity:0.5}});var _default=(0,_config.withTheme)(Slider,'Slider');exports.default=_default;",{"version":3,"sources":["C:/backup/RNDSDemo/node_modules/react-native-elements/src/slider/Slider.js"],"names":["TRACK_SIZE","THUMB_SIZE","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","timing","duration","easing","Easing","inOut","ease","delay","getBoundedValue","value","maximumValue","minimumValue","Rect","x","y","width","height","Slider","props","measureContainer","handleMeasure","measureTrack","measureThumb","state","containerSize","trackSize","thumbSize","allMeasured","Animated","Value","panResponder","PanResponder","create","onStartShouldSetPanResponder","handleStartShouldSetPanResponder","bind","onMoveShouldSetPanResponder","handleMoveShouldSetPanResponder","onPanResponderGrant","handlePanResponderGrant","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminationRequest","handlePanResponderRequestEnd","onPanResponderTerminate","prevProps","newValue","animateTransitions","setCurrentValueAnimated","setCurrentValue","setValue","animationType","animationConfig","toValue","start","_previousLeft","getThumbLeft","getCurrentValue","fireChangeEvent","_","gestureState","disabled","getValue","nativeEvent","thumbTouchRect","getThumbTouchRect","containsPoint","locationX","locationY","e","thumbHitTest","event","thumbTouchSize","size","Math","max","getTouchOverflowSize","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","name","layout","layoutWidth","layoutHeight","orientation","storeName","currentSize","_containerSize","_trackSize","_thumbSize","setState","length","thumbLeft","dy","dx","ratio","step","min","round","__getValue","getRatio","touchOverflowSize","positionStyle","left","top","thumbStart","minimumTrackStyle","position","add","translateX","translateY","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","containerStyle","style","trackStyle","thumbStyle","other","mainStyles","styles","interpolate","inputRange","outputRange","valueVisibleStyle","getMinimumTrackStyles","thumbStyleTransform","transform","getTouchOverflowStyle","StyleSheet","flatten","containerVertical","containerHorizontal","track","trackVertical","trackHorizontal","thumb","thumbVertical","thumbHorizontal","getThumbPositionStyles","touchArea","panHandlers","renderDebugThumbTouchRect","Component","propTypes","PropTypes","number","bool","string","shape","onValueChange","func","onSlidingStart","onSlidingComplete","ViewPropTypes","oneOf","object","defaultProps","justifyContent","flexDirection","alignItems","borderRadius","flex","right","bottom","debugThumbTouchArea"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Animated, Easing, PanResponder } from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\n\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 20;\n\nconst DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n  },\n};\n\nconst getBoundedValue = ({ value, maximumValue, minimumValue }) =>\n  value > maximumValue\n    ? maximumValue\n    : value < minimumValue\n    ? minimumValue\n    : value;\n\nclass Rect {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  containsPoint(x, y) {\n    return (\n      x >= this.x &&\n      y >= this.y &&\n      x <= this.x + this.width &&\n      y <= this.y + this.height\n    );\n  }\n}\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerSize: { width: 0, height: 0 },\n      trackSize: { width: 0, height: 0 },\n      thumbSize: { width: 0, height: 0 },\n      allMeasured: false,\n      value: new Animated.Value(getBoundedValue(props)),\n    };\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this.handleStartShouldSetPanResponder.bind(\n        this\n      ),\n      onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder.bind(\n        this\n      ),\n      onPanResponderGrant: this.handlePanResponderGrant.bind(this),\n      onPanResponderMove: this.handlePanResponderMove.bind(this),\n      onPanResponderRelease: this.handlePanResponderEnd.bind(this),\n      onPanResponderTerminationRequest: this.handlePanResponderRequestEnd.bind(\n        this\n      ),\n      onPanResponderTerminate: this.handlePanResponderEnd.bind(this),\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const newValue = getBoundedValue(this.props);\n\n    if (prevProps.value !== newValue) {\n      if (this.props.animateTransitions) {\n        this.setCurrentValueAnimated(newValue);\n      } else {\n        this.setCurrentValue(newValue);\n      }\n    }\n  }\n\n  setCurrentValue(value) {\n    this.state.value.setValue(value);\n  }\n\n  setCurrentValueAnimated(value) {\n    const { animationType } = this.props;\n    const animationConfig = Object.assign(\n      {},\n      DEFAULT_ANIMATION_CONFIGS[animationType],\n      this.props.animationConfig,\n      {\n        toValue: value,\n      }\n    );\n\n    Animated[animationType](this.state.value, animationConfig).start();\n  }\n\n  handleMoveShouldSetPanResponder(/* e: Object, gestureState: Object */) {\n    // Should we become active when the user moves a touch over the thumb?\n    return false;\n  }\n\n  handlePanResponderGrant(/* e: Object, gestureState: Object */) {\n    this._previousLeft = this.getThumbLeft(this.getCurrentValue());\n    this.fireChangeEvent('onSlidingStart');\n  }\n\n  handlePanResponderMove(_, gestureState) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setCurrentValue(this.getValue(gestureState));\n    this.fireChangeEvent('onValueChange');\n  }\n\n  handlePanResponderRequestEnd() {\n    // Should we allow another component to take over this pan?\n    return false;\n  }\n\n  handlePanResponderEnd(_, gestureState) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setCurrentValue(this.getValue(gestureState));\n    this.fireChangeEvent('onSlidingComplete');\n  }\n\n  thumbHitTest({ nativeEvent }) {\n    const thumbTouchRect = this.getThumbTouchRect();\n    return thumbTouchRect.containsPoint(\n      nativeEvent.locationX,\n      nativeEvent.locationY\n    );\n  }\n\n  handleStartShouldSetPanResponder(e /* gestureState: Object */) {\n    // Should we become active when the user presses down on the thumb?\n    return this.thumbHitTest(e);\n  }\n\n  fireChangeEvent(event) {\n    if (this.props[event]) {\n      this.props[event](this.getCurrentValue());\n    }\n  }\n\n  getTouchOverflowSize() {\n    const { thumbSize, allMeasured, containerSize } = this.state;\n    const { thumbTouchSize } = this.props;\n\n    const size = {};\n    if (allMeasured === true) {\n      size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);\n      size.height = Math.max(0, thumbTouchSize.height - containerSize.height);\n    }\n\n    return size;\n  }\n\n  getTouchOverflowStyle() {\n    const { width, height } = this.getTouchOverflowSize();\n\n    const touchOverflowStyle = {};\n    if (width !== undefined && height !== undefined) {\n      const verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n\n      const horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (this.props.debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = 'orange';\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  }\n\n  handleMeasure(name, x) {\n    const { width: layoutWidth, height: layoutHeight } = x.nativeEvent.layout;\n    const width =\n      this.props.orientation === 'vertical' ? layoutHeight : layoutWidth;\n    const height =\n      this.props.orientation === 'vertical' ? layoutWidth : layoutHeight;\n    const size = { width, height };\n    const storeName = `_${name}`;\n    const currentSize = this[storeName];\n    if (\n      currentSize &&\n      width === currentSize.width &&\n      height === currentSize.height\n    ) {\n      return;\n    }\n    this[storeName] = size;\n\n    if (this._containerSize && this._trackSize && this._thumbSize) {\n      this.setState({\n        containerSize: this._containerSize,\n        trackSize: this._trackSize,\n        thumbSize: this._thumbSize,\n        allMeasured: true,\n      });\n    }\n  }\n\n  measureContainer = x => {\n    this.handleMeasure('containerSize', x);\n  };\n\n  measureTrack = x => {\n    this.handleMeasure('trackSize', x);\n  };\n\n  measureThumb = x => {\n    this.handleMeasure('thumbSize', x);\n  };\n\n  getValue(gestureState) {\n    const length = this.state.containerSize.width - this.state.thumbSize.width;\n    const thumbLeft =\n      this._previousLeft +\n      (this.props.orientation === 'vertical'\n        ? gestureState.dy\n        : gestureState.dx);\n\n    const ratio = thumbLeft / length;\n\n    if (this.props.step) {\n      return Math.max(\n        this.props.minimumValue,\n        Math.min(\n          this.props.maximumValue,\n          this.props.minimumValue +\n            Math.round(\n              (ratio * (this.props.maximumValue - this.props.minimumValue)) /\n                this.props.step\n            ) *\n              this.props.step\n        )\n      );\n    }\n    return Math.max(\n      this.props.minimumValue,\n      Math.min(\n        this.props.maximumValue,\n        ratio * (this.props.maximumValue - this.props.minimumValue) +\n          this.props.minimumValue\n      )\n    );\n  }\n\n  getCurrentValue() {\n    return this.state.value.__getValue();\n  }\n\n  getRatio(value) {\n    return (\n      (value - this.props.minimumValue) /\n      (this.props.maximumValue - this.props.minimumValue)\n    );\n  }\n\n  getThumbLeft(value) {\n    const ratio = this.getRatio(value);\n    return (\n      ratio * (this.state.containerSize.width - this.state.thumbSize.width)\n    );\n  }\n\n  getThumbTouchRect() {\n    const { thumbSize, containerSize } = this.state;\n    const { thumbTouchSize } = this.props;\n    const touchOverflowSize = this.getTouchOverflowSize();\n\n    if (this.props.orientation === 'vertical') {\n      return new Rect(\n        touchOverflowSize.height / 2 +\n          (containerSize.height - thumbTouchSize.height) / 2,\n        touchOverflowSize.width / 2 +\n          this.getThumbLeft(this.getCurrentValue()) +\n          (thumbSize.width - thumbTouchSize.width) / 2,\n        thumbTouchSize.width,\n        thumbTouchSize.height\n      );\n    }\n    return new Rect(\n      touchOverflowSize.width / 2 +\n        this.getThumbLeft(this.getCurrentValue()) +\n        (thumbSize.width - thumbTouchSize.width) / 2,\n      touchOverflowSize.height / 2 +\n        (containerSize.height - thumbTouchSize.height) / 2,\n      thumbTouchSize.width,\n      thumbTouchSize.height\n    );\n  }\n\n  renderDebugThumbTouchRect(thumbLeft) {\n    const thumbTouchRect = this.getThumbTouchRect();\n    const positionStyle = {\n      left: thumbLeft,\n      top: thumbTouchRect.y,\n      width: thumbTouchRect.width,\n      height: thumbTouchRect.height,\n    };\n    return <Animated.View style={positionStyle} pointerEvents=\"none\" />;\n  }\n\n  getMinimumTrackStyles(thumbStart) {\n    const { thumbSize, trackSize } = this.state;\n    const minimumTrackStyle = {\n      position: 'absolute',\n    };\n\n    if (this.props.orientation === 'vertical') {\n      minimumTrackStyle.height = Animated.add(thumbStart, thumbSize.height / 2);\n      minimumTrackStyle.marginLeft = -trackSize.width;\n    } else {\n      minimumTrackStyle.width = Animated.add(thumbStart, thumbSize.width / 2);\n      minimumTrackStyle.marginTop = -trackSize.height;\n    }\n    return minimumTrackStyle;\n  }\n\n  getThumbPositionStyles(thumbStart) {\n    if (this.props.orientation === 'vertical') {\n      return [\n        {\n          translateX:\n            -(this.state.trackSize.height + this.state.thumbSize.height) / 2,\n        },\n        { translateY: thumbStart },\n      ];\n    }\n    return [\n      { translateX: thumbStart },\n      {\n        translateY:\n          -(this.state.trackSize.height + this.state.thumbSize.height) / 2,\n      },\n    ];\n  }\n\n  render() {\n    const {\n      minimumValue,\n      maximumValue,\n      minimumTrackTintColor,\n      maximumTrackTintColor,\n      thumbTintColor,\n      containerStyle,\n      style,\n      trackStyle,\n      thumbStyle,\n      debugTouchArea,\n      orientation,\n      ...other\n    } = this.props;\n\n    const { value, containerSize, thumbSize, allMeasured } = this.state;\n\n    const mainStyles = containerStyle || styles;\n    const thumbStart = value.interpolate({\n      inputRange: [minimumValue, maximumValue],\n      outputRange: [0, containerSize.width - thumbSize.width],\n      // extrapolate: 'clamp',\n    });\n\n    const valueVisibleStyle = {};\n    if (!allMeasured) {\n      valueVisibleStyle.height = 0;\n      valueVisibleStyle.width = 0;\n    }\n\n    const minimumTrackStyle = {\n      ...this.getMinimumTrackStyles(thumbStart),\n      backgroundColor: minimumTrackTintColor,\n      ...valueVisibleStyle,\n    };\n\n    const thumbStyleTransform = (thumbStyle && thumbStyle.transform) || [];\n    const touchOverflowStyle = this.getTouchOverflowStyle();\n    return (\n      <View\n        {...other}\n        style={StyleSheet.flatten([\n          orientation === 'vertical'\n            ? mainStyles.containerVertical\n            : mainStyles.containerHorizontal,\n          style,\n        ])}\n        onLayout={this.measureContainer}\n      >\n        <View\n          style={StyleSheet.flatten([\n            mainStyles.track,\n            orientation === 'vertical'\n              ? mainStyles.trackVertical\n              : mainStyles.trackHorizontal,\n            trackStyle,\n            { backgroundColor: maximumTrackTintColor },\n          ])}\n          onLayout={this.measureTrack}\n        />\n        <Animated.View\n          style={StyleSheet.flatten([\n            mainStyles.track,\n            orientation === 'vertical'\n              ? mainStyles.trackVertical\n              : mainStyles.trackHorizontal,\n            trackStyle,\n            minimumTrackStyle,\n          ])}\n        />\n        <Animated.View\n          testID=\"sliderThumb\"\n          onLayout={this.measureThumb}\n          style={StyleSheet.flatten([\n            { backgroundColor: thumbTintColor },\n            mainStyles.thumb,\n            orientation === 'vertical'\n              ? mainStyles.thumbVertical(trackStyle && trackStyle.width)\n              : mainStyles.thumbHorizontal(trackStyle && trackStyle.height),\n            thumbStyle,\n            {\n              transform: [\n                ...this.getThumbPositionStyles(thumbStart),\n                ...thumbStyleTransform,\n              ],\n              ...valueVisibleStyle,\n            },\n          ])}\n        />\n        <View\n          style={StyleSheet.flatten([styles.touchArea, touchOverflowStyle])}\n          {...this.panResponder.panHandlers}\n        >\n          {debugTouchArea === true &&\n            this.renderDebugThumbTouchRect(thumbStart)}\n        </View>\n      </View>\n    );\n  }\n}\n\nSlider.propTypes = {\n  /**\n   * Initial value of the slider. The value should be between minimumValue\n   * and maximumValue, which default to 0 and 1 respectively.\n   * Default value is 0.\n   *\n   * *This is not a controlled component*, e.g. if you don't update\n   * the value, the component won't be reset to its inital value.\n   */\n  value: PropTypes.number,\n\n  /**\n   * If true the user won't be able to move the slider.\n   * Default value is false.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Initial minimum value of the slider. Default value is 0.\n   */\n  minimumValue: PropTypes.number,\n\n  /**\n   * Initial maximum value of the slider. Default value is 1.\n   */\n  maximumValue: PropTypes.number,\n\n  /**\n   * Step value of the slider. The value should be between 0 and\n   * (maximumValue - minimumValue). Default value is 0.\n   */\n  step: PropTypes.number,\n\n  /**\n   * The color used for the track to the left of the button. Overrides the\n   * default blue gradient image.\n   */\n  minimumTrackTintColor: PropTypes.string,\n\n  /**\n   * The color used for the track to the right of the button. Overrides the\n   * default blue gradient image.\n   */\n  maximumTrackTintColor: PropTypes.string,\n\n  /**\n   * The color used for the thumb.\n   */\n  thumbTintColor: PropTypes.string,\n\n  /**\n   * The size of the touch area that allows moving the thumb.\n   * The touch area has the same center has the visible thumb.\n   * This allows to have a visually small thumb while still allowing the user\n   * to move it easily.\n   * The default is {width: 40, height: 40}.\n   */\n  thumbTouchSize: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * Callback called when the user starts changing the value (e.g. when\n   * the slider is pressed).\n   */\n  onSlidingStart: PropTypes.func,\n\n  /**\n   * Callback called when the user finishes changing the value (e.g. when\n   * the slider is released).\n   */\n  onSlidingComplete: PropTypes.func,\n\n  /**\n   * The style applied to the slider container.\n   */\n  style: ViewPropTypes.style,\n\n  /**\n   * The style applied to the track.\n   */\n  trackStyle: ViewPropTypes.style,\n\n  /**\n   * The style applied to the thumb.\n   */\n  thumbStyle: ViewPropTypes.style,\n\n  /**\n   * Set this to true to visually see the thumb touch rect in green.\n   */\n  debugTouchArea: PropTypes.bool,\n\n  /**\n   * Set to true to animate values with default 'timing' animation type\n   */\n  animateTransitions: PropTypes.bool,\n\n  /**\n   * Custom Animation type. 'spring' or 'timing'.\n   */\n  animationType: PropTypes.oneOf(['spring', 'timing']),\n\n  /**\n   * Choose the orientation. 'horizontal' or 'vertical'.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Used to configure the animation parameters.  These are the same parameters in the Animated library.\n   */\n  animationConfig: PropTypes.object,\n  containerStyle: ViewPropTypes.style,\n};\n\nSlider.defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  minimumTrackTintColor: '#3f3f3f',\n  maximumTrackTintColor: '#b3b3b3',\n  thumbTintColor: 'red',\n  thumbTouchSize: { width: 40, height: 40 },\n  debugTouchArea: false,\n  animationType: 'timing',\n  orientation: 'horizontal',\n};\n\nconst styles = StyleSheet.create({\n  containerHorizontal: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  containerVertical: {\n    width: 40,\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  track: {\n    borderRadius: TRACK_SIZE / 2,\n  },\n  trackHorizontal: {\n    height: TRACK_SIZE,\n  },\n  trackVertical: {\n    flex: 1,\n    width: TRACK_SIZE,\n  },\n  thumb: {\n    position: 'absolute',\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2,\n  },\n  thumbHorizontal: height => ({\n    top: 22 + (height ? (height - 4) / 2 : 0),\n  }),\n  thumbVertical: width => ({\n    left: 22 + (width ? (width - 4) / 2 : 0),\n  }),\n  touchArea: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  debugThumbTouchArea: {\n    position: 'absolute',\n    backgroundColor: 'green',\n    opacity: 0.5,\n  },\n});\n\nexport { Slider };\nexport default withTheme(Slider, 'Slider');\n"]}]}