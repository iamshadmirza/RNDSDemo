{"remainingRequest":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js??ref--14-1!C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js??ref--14-2!C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\checkbox\\CheckBox.js","dependencies":[{"path":"C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\checkbox\\CheckBox.js","mtime":1575294964875},{"path":"C:\\backup\\RNDSDemo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575382926455},{"path":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575382927776},{"path":"C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js","mtime":1574752627091}],"contextDependencies":[],"result":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.CheckBox=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"react-native\");var _Text=_interopRequireDefault(require(\"../text/Text\"));var _CheckBoxIcon=_interopRequireDefault(require(\"./CheckBoxIcon\"));var _config=require(\"../config\");var _jsxFileName=\"C:\\\\backup\\\\RNDSDemo\\\\node_modules\\\\react-native-elements\\\\src\\\\checkbox\\\\CheckBox.js\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var CheckBox=function CheckBox(props){var theme=props.theme,rest=(0,_objectWithoutProperties2.default)(props,[\"theme\"]);var Component=rest.Component,checked=rest.checked,iconRight=rest.iconRight,title=rest.title,titleProps=rest.titleProps,center=rest.center,right=rest.right,containerStyle=rest.containerStyle,textStyle=rest.textStyle,wrapperStyle=rest.wrapperStyle,onPress=rest.onPress,onLongPress=rest.onLongPress,checkedTitle=rest.checkedTitle,fontFamily=rest.fontFamily,_rest$checkedColor=rest.checkedColor,checkedColor=_rest$checkedColor===void 0?theme.colors.primary:_rest$checkedColor,attributes=(0,_objectWithoutProperties2.default)(rest,[\"Component\",\"checked\",\"iconRight\",\"title\",\"titleProps\",\"center\",\"right\",\"containerStyle\",\"textStyle\",\"wrapperStyle\",\"onPress\",\"onLongPress\",\"checkedTitle\",\"fontFamily\",\"checkedColor\"]);return _react.default.createElement(Component,(0,_extends2.default)({},attributes,{testID:\"checkbox\",onLongPress:onLongPress,onPress:onPress,style:_reactNative.StyleSheet.flatten([styles.container,title&&styles.containerHasTitle,containerStyle&&containerStyle]),__source:{fileName:_jsxFileName,lineNumber:38}}),_react.default.createElement(_reactNative.View,{style:_reactNative.StyleSheet.flatten([styles.wrapper,right&&{justifyContent:'flex-end'},center&&{justifyContent:'center'},wrapperStyle&&wrapperStyle]),__source:{fileName:_jsxFileName,lineNumber:49}},!iconRight&&_react.default.createElement(_CheckBoxIcon.default,(0,_extends2.default)({},props,{checkedColor:checkedColor,__source:{fileName:_jsxFileName,lineNumber:57}})),_react.default.isValidElement(title)?title:title&&_react.default.createElement(_Text.default,(0,_extends2.default)({testID:\"checkboxTitle\",style:_reactNative.StyleSheet.flatten([styles.text(theme),textStyle&&textStyle,fontFamily&&{fontFamily:fontFamily}])},titleProps,{__source:{fileName:_jsxFileName,lineNumber:62}}),checked?checkedTitle||title:title),iconRight&&_react.default.createElement(_CheckBoxIcon.default,(0,_extends2.default)({},props,{checkedColor:checkedColor,__source:{fileName:_jsxFileName,lineNumber:75}}))));};exports.CheckBox=CheckBox;CheckBox.propTypes=_objectSpread({},_CheckBoxIcon.default.propTypes,{Component:_propTypes.default.elementType,iconRight:_propTypes.default.bool,title:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.element]),titleProps:_propTypes.default.object,center:_propTypes.default.bool,right:_propTypes.default.bool,containerStyle:_config.ViewPropTypes.style,wrapperStyle:_config.ViewPropTypes.style,textStyle:_reactNative.Text.propTypes.style,onPress:_propTypes.default.func,onLongPress:_propTypes.default.func,checkedTitle:_propTypes.default.string,fontFamily:_propTypes.default.string});CheckBox.defaultProps={checked:false,iconRight:false,right:false,center:false,uncheckedColor:'#bfbfbf',checkedIcon:'check-square-o',uncheckedIcon:'square-o',size:24,Component:_reactNative.TouchableOpacity,titleProps:{}};var styles={wrapper:{flexDirection:'row',alignItems:'center'},container:{margin:5,marginLeft:10,marginRight:10,padding:10},containerHasTitle:{borderWidth:1,borderRadius:3,backgroundColor:'#fafafa',borderColor:'#ededed'},text:function text(theme){return _objectSpread({marginLeft:10,marginRight:10,color:theme.colors.grey1},_reactNative.Platform.select({android:_objectSpread({},_config.fonts.android.bold),default:{fontWeight:'bold'}}));}};var _default=(0,_config.withTheme)(CheckBox,'CheckBox');exports.default=_default;",{"version":3,"sources":["C:/backup/RNDSDemo/node_modules/react-native-elements/src/checkbox/CheckBox.js"],"names":["CheckBox","props","theme","rest","Component","checked","iconRight","title","titleProps","center","right","containerStyle","textStyle","wrapperStyle","onPress","onLongPress","checkedTitle","fontFamily","checkedColor","colors","primary","attributes","StyleSheet","flatten","styles","container","containerHasTitle","wrapper","justifyContent","React","isValidElement","text","propTypes","CheckBoxIcon","PropTypes","elementType","bool","oneOfType","string","element","object","ViewPropTypes","style","NativeText","func","defaultProps","uncheckedColor","checkedIcon","uncheckedIcon","size","TouchableOpacity","flexDirection","alignItems","margin","marginLeft","marginRight","padding","borderWidth","borderRadius","backgroundColor","borderColor","color","grey1","Platform","select","android","fonts","bold","default","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  Platform,\n  Text as NativeText,\n} from 'react-native';\n\nimport TextElement from '../text/Text';\nimport CheckBoxIcon from './CheckBoxIcon';\nimport { fonts, ViewPropTypes, withTheme } from '../config';\n\nconst CheckBox = props => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    checked,\n    iconRight,\n    title,\n    titleProps,\n    center,\n    right,\n    containerStyle,\n    textStyle,\n    wrapperStyle,\n    onPress,\n    onLongPress,\n    checkedTitle,\n    fontFamily,\n    checkedColor = theme.colors.primary,\n    ...attributes\n  } = rest;\n\n  return (\n    <Component\n      {...attributes}\n      testID=\"checkbox\"\n      onLongPress={onLongPress}\n      onPress={onPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        title && styles.containerHasTitle,\n        containerStyle && containerStyle,\n      ])}\n    >\n      <View\n        style={StyleSheet.flatten([\n          styles.wrapper,\n          right && { justifyContent: 'flex-end' },\n          center && { justifyContent: 'center' },\n          wrapperStyle && wrapperStyle,\n        ])}\n      >\n        {!iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n\n        {React.isValidElement(title)\n          ? title\n          : title && (\n              <TextElement\n                testID=\"checkboxTitle\"\n                style={StyleSheet.flatten([\n                  styles.text(theme),\n                  textStyle && textStyle,\n                  fontFamily && { fontFamily },\n                ])}\n                {...titleProps}\n              >\n                {checked ? checkedTitle || title : title}\n              </TextElement>\n            )}\n\n        {iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n      </View>\n    </Component>\n  );\n};\nCheckBox.propTypes = {\n  ...CheckBoxIcon.propTypes,\n  Component: PropTypes.elementType,\n  iconRight: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleProps: PropTypes.object,\n  center: PropTypes.bool,\n  right: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  checkedTitle: PropTypes.string,\n  fontFamily: PropTypes.string,\n};\n\nCheckBox.defaultProps = {\n  checked: false,\n  iconRight: false,\n  right: false,\n  center: false,\n  uncheckedColor: '#bfbfbf',\n  checkedIcon: 'check-square-o',\n  uncheckedIcon: 'square-o',\n  size: 24,\n  Component: TouchableOpacity,\n  titleProps: {},\n};\n\nconst styles = {\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n  },\n  containerHasTitle: {\n    borderWidth: 1,\n    borderRadius: 3,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed',\n  },\n  text: theme => ({\n    marginLeft: 10,\n    marginRight: 10,\n    color: theme.colors.grey1,\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      default: {\n        fontWeight: 'bold',\n      },\n    }),\n  }),\n};\n\nexport { CheckBox };\nexport default withTheme(CheckBox, 'CheckBox');\n"]}]}