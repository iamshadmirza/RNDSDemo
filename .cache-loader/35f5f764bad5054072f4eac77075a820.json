{"remainingRequest":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js??ref--14-1!C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js??ref--14-2!C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\helpers\\index.js","dependencies":[{"path":"C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\helpers\\index.js","mtime":1575294964875},{"path":"C:\\backup\\RNDSDemo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575382926455},{"path":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575382927776},{"path":"C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js","mtime":1574752627091}],"contextDependencies":[],"result":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"color\",{enumerable:true,get:function get(){return _color.default;}});Object.defineProperty(exports,\"renderNode\",{enumerable:true,get:function get(){return _renderNode.default;}});Object.defineProperty(exports,\"getIconType\",{enumerable:true,get:function get(){return _getIconType.default;}});Object.defineProperty(exports,\"normalizeText\",{enumerable:true,get:function get(){return _normalizeText.default;}});Object.defineProperty(exports,\"nodeType\",{enumerable:true,get:function get(){return _nodeType.default;}});exports.conditionalStyle=exports.isIOS=exports.ScreenHeight=exports.ScreenWidth=exports.patchWebProps=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _reactNative=require(\"react-native\");var _color=_interopRequireDefault(require(\"color\"));var _renderNode=_interopRequireDefault(require(\"./renderNode\"));var _getIconType=_interopRequireDefault(require(\"./getIconType\"));var _normalizeText=_interopRequireDefault(require(\"./normalizeText\"));var _nodeType=_interopRequireDefault(require(\"./nodeType\"));var Screen=_reactNative.Dimensions.get('window');var ScreenWidth=Screen.width;exports.ScreenWidth=ScreenWidth;var ScreenHeight=Screen.height;exports.ScreenHeight=ScreenHeight;var isIOS=_reactNative.Platform.OS==='ios';exports.isIOS=isIOS;var conditionalStyle=function conditionalStyle(condition,style){return condition?style:{};};exports.conditionalStyle=conditionalStyle;var patchWebProps=function patchWebProps(_ref){var updateTheme=_ref.updateTheme,replaceTheme=_ref.replaceTheme,onClear=_ref.onClear,rest=(0,_objectWithoutProperties2.default)(_ref,[\"updateTheme\",\"replaceTheme\",\"onClear\"]);return rest;};exports.patchWebProps=patchWebProps;",{"version":3,"sources":["C:/backup/RNDSDemo/node_modules/react-native-elements/src/helpers/index.js"],"names":["Screen","Dimensions","get","ScreenWidth","width","ScreenHeight","height","isIOS","Platform","OS","conditionalStyle","condition","style","patchWebProps","updateTheme","replaceTheme","onClear","rest"],"mappings":"y4BAAA,yCACA,oDACA,gEACA,kEACA,sEACA,4DAEA,GAAMA,CAAAA,MAAM,CAAGC,wBAAWC,GAAX,CAAe,QAAf,CAAf,CACA,GAAMC,CAAAA,WAAW,CAAGH,MAAM,CAACI,KAA3B,C,gCACA,GAAMC,CAAAA,YAAY,CAAGL,MAAM,CAACM,MAA5B,C,kCACA,GAAMC,CAAAA,KAAK,CAAGC,sBAASC,EAAT,GAAgB,KAA9B,C,oBAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,SAAD,CAAYC,KAAZ,QAAuBD,CAAAA,SAAS,CAAGC,KAAH,CAAW,EAA3C,EAAzB,C,0CAEO,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAKvB,IAJJC,CAAAA,WAII,MAJJA,WAII,CAHJC,YAGI,MAHJA,YAGI,CAFJC,OAEI,MAFJA,OAEI,CADDC,IACC,sFACJ,MAAOA,CAAAA,IAAP,CACD,CAPM,C","sourcesContent":["import { Platform, Dimensions } from 'react-native';\nimport color from 'color';\nimport renderNode from './renderNode';\nimport getIconType from './getIconType';\nimport normalizeText from './normalizeText';\nimport nodeType from './nodeType';\n\nconst Screen = Dimensions.get('window');\nconst ScreenWidth = Screen.width;\nconst ScreenHeight = Screen.height;\nconst isIOS = Platform.OS === 'ios';\n\nconst conditionalStyle = (condition, style) => (condition ? style : {});\n\nexport const patchWebProps = ({\n  updateTheme,\n  replaceTheme,\n  onClear,\n  ...rest\n}) => {\n  return rest;\n};\n\nexport {\n  renderNode,\n  getIconType,\n  normalizeText,\n  nodeType,\n  ScreenWidth,\n  ScreenHeight,\n  isIOS,\n  conditionalStyle,\n  color,\n};\n"]}]}