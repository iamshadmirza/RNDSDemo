{"remainingRequest":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js??ref--14-1!C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js??ref--14-2!C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\tooltip\\Tooltip.js","dependencies":[{"path":"C:\\backup\\RNDSDemo\\node_modules\\react-native-elements\\src\\tooltip\\Tooltip.js","mtime":1575294964875},{"path":"C:\\backup\\RNDSDemo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575382926455},{"path":"C:\\backup\\RNDSDemo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575382927776},{"path":"C:\\backup\\RNDSDemo\\node_modules\\babel-loader\\lib\\index.js","mtime":1574752627091}],"contextDependencies":[],"result":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.Tooltip=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf3=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"react-native\");var _config=require(\"../config\");var _helpers=require(\"../helpers\");var _Triangle=_interopRequireDefault(require(\"./Triangle\"));var _getTooltipCoordinate2=_interopRequireWildcard(require(\"./getTooltipCoordinate\"));var _jsxFileName=\"C:\\\\backup\\\\RNDSDemo\\\\node_modules\\\\react-native-elements\\\\src\\\\tooltip\\\\Tooltip.js\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var Tooltip=function(_React$PureComponent){(0,_inherits2.default)(Tooltip,_React$PureComponent);function Tooltip(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,Tooltip);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(Tooltip)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={isVisible:false,yOffset:0,xOffset:0,elementWidth:0,elementHeight:0};_this.toggleTooltip=function(){var onClose=_this.props.onClose;_this.getElementPosition();_this.setState(function(prevState){if(prevState.isVisible&&!_helpers.isIOS){onClose&&onClose();}return{isVisible:!prevState.isVisible};});};_this.wrapWithPress=function(toggleOnPress,children){if(toggleOnPress){return _react.default.createElement(_reactNative.TouchableOpacity,{onPress:_this.toggleTooltip,activeOpacity:1,__source:{fileName:_jsxFileName,lineNumber:39}},children);}return children;};_this.getTooltipStyle=function(){var _this$state=_this.state,yOffset=_this$state.yOffset,xOffset=_this$state.xOffset,elementHeight=_this$state.elementHeight,elementWidth=_this$state.elementWidth;var _this$props=_this.props,height=_this$props.height,backgroundColor=_this$props.backgroundColor,width=_this$props.width,withPointer=_this$props.withPointer,containerStyle=_this$props.containerStyle;var _getTooltipCoordinate=(0,_getTooltipCoordinate2.default)(xOffset,yOffset,elementWidth,elementHeight,_helpers.ScreenWidth,_helpers.ScreenHeight,width,height,withPointer),x=_getTooltipCoordinate.x,y=_getTooltipCoordinate.y;return _objectSpread({position:'absolute',left:x,top:y,width:width,height:height,backgroundColor:backgroundColor,display:'flex',alignItems:'center',justifyContent:'center',flex:1,borderRadius:10,padding:10},containerStyle);};_this.renderPointer=function(tooltipY){var _this$state2=_this.state,yOffset=_this$state2.yOffset,xOffset=_this$state2.xOffset,elementHeight=_this$state2.elementHeight,elementWidth=_this$state2.elementWidth;var _this$props2=_this.props,backgroundColor=_this$props2.backgroundColor,pointerColor=_this$props2.pointerColor;var pastMiddleLine=yOffset>tooltipY;return _react.default.createElement(_reactNative.View,{style:{position:'absolute',top:pastMiddleLine?yOffset-13:yOffset+elementHeight-2,left:xOffset+(0,_getTooltipCoordinate2.getElementVisibleWidth)(elementWidth,xOffset,_helpers.ScreenWidth)/2-7.5},__source:{fileName:_jsxFileName,lineNumber:94}},_react.default.createElement(_Triangle.default,{style:{borderBottomColor:pointerColor||backgroundColor},isDown:pastMiddleLine,__source:{fileName:_jsxFileName,lineNumber:104}}));};_this.renderContent=function(withTooltip){var _this$props3=_this.props,popover=_this$props3.popover,withPointer=_this$props3.withPointer,toggleOnPress=_this$props3.toggleOnPress,highlightColor=_this$props3.highlightColor;if(!withTooltip){return _this.wrapWithPress(toggleOnPress,_this.props.children);}var _this$state3=_this.state,yOffset=_this$state3.yOffset,xOffset=_this$state3.xOffset,elementWidth=_this$state3.elementWidth,elementHeight=_this$state3.elementHeight;var tooltipStyle=_this.getTooltipStyle();return _react.default.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:122}},_react.default.createElement(_reactNative.View,{style:{position:'absolute',top:yOffset,left:xOffset,backgroundColor:highlightColor,overflow:'visible',width:elementWidth,height:elementHeight},__source:{fileName:_jsxFileName,lineNumber:123}},_this.props.children),withPointer&&_this.renderPointer(tooltipStyle.top),_react.default.createElement(_reactNative.View,{style:tooltipStyle,testID:\"tooltipPopoverContainer\",__source:{fileName:_jsxFileName,lineNumber:137}},popover));};_this.getElementPosition=function(){_this.renderedElement&&_this.renderedElement.measure(function(frameOffsetX,frameOffsetY,width,height,pageOffsetX,pageOffsetY){_this.setState({xOffset:pageOffsetX,yOffset:_helpers.isIOS?pageOffsetY:pageOffsetY-_reactNative.StatusBar.currentHeight,elementWidth:width,elementHeight:height});});};return _this;}(0,_createClass2.default)(Tooltip,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(this.getElementPosition,500);}},{key:\"render\",value:function render(){var _this2=this;var isVisible=this.state.isVisible;var _this$props4=this.props,onClose=_this$props4.onClose,withOverlay=_this$props4.withOverlay,overlayColor=_this$props4.overlayColor,onOpen=_this$props4.onOpen;return _react.default.createElement(_reactNative.View,{collapsable:false,ref:function ref(e){_this2.renderedElement=e;},__source:{fileName:_jsxFileName,lineNumber:177}},this.renderContent(false),_react.default.createElement(_reactNative.Modal,{animationType:\"fade\",visible:isVisible,transparent:true,onDismiss:onClose,onShow:onOpen,onRequestClose:onClose,__source:{fileName:_jsxFileName,lineNumber:184}},_react.default.createElement(_reactNative.TouchableOpacity,{style:styles.container(withOverlay,overlayColor),onPress:this.toggleTooltip,activeOpacity:1,__source:{fileName:_jsxFileName,lineNumber:192}},this.renderContent(true))));}}]);return Tooltip;}(_react.default.PureComponent);exports.Tooltip=Tooltip;Tooltip.propTypes={children:_propTypes.default.element,withPointer:_propTypes.default.bool,popover:_propTypes.default.element,toggleOnPress:_propTypes.default.bool,height:_propTypes.default.number,width:_propTypes.default.oneOfType([_propTypes.default.number,_propTypes.default.string]),containerStyle:_config.ViewPropTypes.style,pointerColor:_propTypes.default.string,onClose:_propTypes.default.func,onOpen:_propTypes.default.func,overlayColor:_propTypes.default.string,withOverlay:_propTypes.default.bool,backgroundColor:_propTypes.default.string,highlightColor:_propTypes.default.string};Tooltip.defaultProps={withOverlay:true,overlayColor:'rgba(250, 250, 250, 0.70)',highlightColor:'transparent',withPointer:true,toggleOnPress:true,height:40,width:150,containerStyle:{},backgroundColor:'#617080',onClose:function onClose(){},onOpen:function onOpen(){}};var styles={container:function container(withOverlay,overlayColor){return{backgroundColor:withOverlay?overlayColor:'transparent',flex:1};}};var _default=(0,_config.withTheme)(Tooltip,'Tooltip');exports.default=_default;",{"version":3,"sources":["C:/backup/RNDSDemo/node_modules/react-native-elements/src/tooltip/Tooltip.js"],"names":["Tooltip","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","onClose","props","getElementPosition","setState","prevState","isIOS","wrapWithPress","toggleOnPress","children","getTooltipStyle","height","backgroundColor","width","withPointer","containerStyle","ScreenWidth","ScreenHeight","x","y","position","left","top","display","alignItems","justifyContent","flex","borderRadius","padding","renderPointer","tooltipY","pointerColor","pastMiddleLine","borderBottomColor","renderContent","withTooltip","popover","highlightColor","tooltipStyle","overflow","renderedElement","measure","frameOffsetX","frameOffsetY","pageOffsetX","pageOffsetY","StatusBar","currentHeight","setTimeout","withOverlay","overlayColor","onOpen","e","styles","container","React","PureComponent","propTypes","PropTypes","element","bool","number","oneOfType","string","ViewPropTypes","style","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableOpacity, Modal, View, StatusBar } from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\n\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, {\n  getElementVisibleWidth,\n} from './getTooltipCoordinate';\n\nclass Tooltip extends React.PureComponent {\n  state = {\n    isVisible: false,\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0,\n  };\n\n  renderedElement;\n\n  toggleTooltip = () => {\n    const { onClose } = this.props;\n    this.getElementPosition();\n    this.setState(prevState => {\n      if (prevState.isVisible && !isIOS) {\n        onClose && onClose();\n      }\n\n      return { isVisible: !prevState.isVisible };\n    });\n  };\n\n  wrapWithPress = (toggleOnPress, children) => {\n    if (toggleOnPress) {\n      return (\n        <TouchableOpacity onPress={this.toggleTooltip} activeOpacity={1}>\n          {children}\n        </TouchableOpacity>\n      );\n    }\n\n    return children;\n  };\n\n  getTooltipStyle = () => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const {\n      height,\n      backgroundColor,\n      width,\n      withPointer,\n      containerStyle,\n    } = this.props;\n\n    const { x, y } = getTooltipCoordinate(\n      xOffset,\n      yOffset,\n      elementWidth,\n      elementHeight,\n      ScreenWidth,\n      ScreenHeight,\n      width,\n      height,\n      withPointer\n    );\n\n    return {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height,\n      backgroundColor,\n      // default styles\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n      borderRadius: 10,\n      padding: 10,\n      ...containerStyle,\n    };\n  };\n\n  renderPointer = tooltipY => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { backgroundColor, pointerColor } = this.props;\n    const pastMiddleLine = yOffset > tooltipY;\n\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n          left:\n            xOffset +\n            getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n            7.5,\n        }}\n      >\n        <Triangle\n          style={{ borderBottomColor: pointerColor || backgroundColor }}\n          isDown={pastMiddleLine}\n        />\n      </View>\n    );\n  };\n\n  renderContent = withTooltip => {\n    const { popover, withPointer, toggleOnPress, highlightColor } = this.props;\n\n    if (!withTooltip) {\n      return this.wrapWithPress(toggleOnPress, this.props.children);\n    }\n\n    const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n    const tooltipStyle = this.getTooltipStyle();\n    return (\n      <View>\n        <View\n          style={{\n            position: 'absolute',\n            top: yOffset,\n            left: xOffset,\n            backgroundColor: highlightColor,\n            overflow: 'visible',\n            width: elementWidth,\n            height: elementHeight,\n          }}\n        >\n          {this.props.children}\n        </View>\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>\n    );\n  };\n\n  componentDidMount() {\n    // wait to compute onLayout values.\n    setTimeout(this.getElementPosition, 500);\n  }\n\n  getElementPosition = () => {\n    this.renderedElement &&\n      this.renderedElement.measure(\n        (\n          frameOffsetX,\n          frameOffsetY,\n          width,\n          height,\n          pageOffsetX,\n          pageOffsetY\n        ) => {\n          this.setState({\n            xOffset: pageOffsetX,\n            yOffset: isIOS\n              ? pageOffsetY\n              : pageOffsetY - StatusBar.currentHeight,\n            elementWidth: width,\n            elementHeight: height,\n          });\n        }\n      );\n  };\n\n  render() {\n    const { isVisible } = this.state;\n    const { onClose, withOverlay, overlayColor, onOpen } = this.props;\n\n    return (\n      <View\n        collapsable={false}\n        ref={e => {\n          this.renderedElement = e;\n        }}\n      >\n        {this.renderContent(false)}\n        <Modal\n          animationType=\"fade\"\n          visible={isVisible}\n          transparent\n          onDismiss={onClose}\n          onShow={onOpen}\n          onRequestClose={onClose}\n        >\n          <TouchableOpacity\n            style={styles.container(withOverlay, overlayColor)}\n            onPress={this.toggleTooltip}\n            activeOpacity={1}\n          >\n            {this.renderContent(true)}\n          </TouchableOpacity>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: ViewPropTypes.style,\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n};\n\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: () => {},\n  onOpen: () => {},\n};\n\nconst styles = {\n  container: (withOverlay, overlayColor) => ({\n    backgroundColor: withOverlay ? overlayColor : 'transparent',\n    flex: 1,\n  }),\n};\n\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"]}]}